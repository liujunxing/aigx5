const eqltri_prompt = `
## 创建等边三角形的步骤

1. 首先用户需要给出等边三角形的名字, 如 'RST'. 如果用户没有给出, 则使用 'ABC' 做为缺省的名字;
2. 将名字分解为三个顶点的名字, 如 'RST' 分解为 顶点1('R'), 顶点2('S'), 顶点3('T').
 又如 'ABC' 分解为 顶点1('A'), 顶点2('B'), 顶点3('C');
3. 使用 create_point() 创建出顶点2, 顶点3, 从下面的坐标中任选一组:
  * 顶点2(-7.14, -3.54), 顶点3(11.01, -3.22);
  * 顶点2(-5, -3), 顶点3(5.2, -3.01);
4. 使用 create_eqltri_apex() 创建出顶点1;
5. 分别连接 顶点1,顶点2,顶点3 构成三条边;
6. 告知用户等边三角形创建成功.

`;

export function get_eqltri_prompt() {
  return eqltri_prompt;
}

/*
## 创建等腰三角形的步骤

1. 首先用户需要给出等腰三角形的名字, 如 'RST'. 如果用户没有给出, 则使用 'ABC' 做为缺省的名字.
2. 将名字分解为三个顶点的名字, 如 'RST' 分解为 顶点apex('R'), 底边顶点1('S'), 底边顶点2('T').
  又如 'ABC' 分解为 顶点apex('A'), 底边顶点1('B'), 底边顶点2('C').
3. 使用 creat_point() 创建底边的两个顶点, 从下面的坐标中选择一组:
  * 底边顶点1(-5, -3), 底边顶点2(5.2, -3.01);
  * 底边顶点1(-6, -3), 底边顶点2(6.3, -3.01);
4. 使用 create_segment() 连接 底边顶点1, 底边顶点2 创建底边.
5. 使用 create_isotri_apex() 创建 顶点apex, 从下面的一组数字中随机选择一个高度比:
  * 1.08
  * 1.12
  * 1.15
  * 1.20
6. 连接顶点与底边顶点形成两腰.
7. 告知用户等腰三角形创建成功.

 */